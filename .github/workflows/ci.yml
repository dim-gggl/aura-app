name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aura_art_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync
    
    - name: Run migrations
      run: |
        uv run python manage.py migrate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/aura_art_test
        SECRET_KEY: test-secret-key
        DEBUG: True
    
    - name: Run tests
      run: |
        uv run python manage.py test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/aura_art_test
        SECRET_KEY: test-secret-key
        DEBUG: True
    
    - name: Run linting
      run: |
        uv run flake8 .
        uv run black --check .
    
    - name: Build documentation
      run: |
        cd docs
        uv run make html

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t aura-art:latest .
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 8000:8000 aura-art:latest
        sleep 30
        curl -f http://localhost:8000/health/ || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    runs-on: ubuntu-latest
    needs: [test, docker]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deployment to https://aura-art.org would happen here"
        # Add your deployment commands here
